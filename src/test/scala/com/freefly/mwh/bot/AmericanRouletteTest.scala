package com.freefly.mwh.bot

import org.scalatest.FlatSpec

class AmericanRouletteTest extends FlatSpec {
  private var nextNumber = Int.MinValue

  val ar = new AmericanRoulette(new RouletteNumberSupplier {
    override def next(): Int = nextNumber
  })

  "Roll method" should s"return value generated by ${classOf[RouletteNumberSupplier].getSimpleName}" in {
    nextNumber = 0
    assert(ar.roll(Nil).number == 0)

    nextNumber = 7
    assert(ar.roll(Nil).number == 7)
  }

  it should s"throw exception when ${classOf[RouletteNumberSupplier].getSimpleName} provides incorrect values" in {
    nextNumber = -2

    assertThrows[IllegalStateException]{
      ar.roll(Nil).number
    }

    nextNumber = 37

    assertThrows[IllegalStateException]{
      ar.roll(Nil).number
    }

    nextNumber = 4354

    assertThrows[IllegalStateException]{
      ar.roll(Nil).number
    }

    nextNumber = -4354

    assertThrows[IllegalStateException]{
      ar.roll(Nil).number
    }
  }




}
