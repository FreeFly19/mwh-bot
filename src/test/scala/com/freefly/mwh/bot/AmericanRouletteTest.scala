package com.freefly.mwh.bot

import org.scalatest.FlatSpec

class AmericanRouletteTest extends FlatSpec {
  private val rouletteNumberSupplierName: String = classOf[RouletteNumberSupplier].getSimpleName
  private var nextNumber = Int.MinValue

  val ar = new AmericanRoulette(new RouletteNumberSupplier {
    override def next(): Int = nextNumber
  })

  private def rollMocked(n: Int) = {
    nextNumber = n
    ar.roll(Nil).number
  }

  "Roll method" should s"return value generated by $rouletteNumberSupplierName" in {
    assert(rollMocked(0) == 0)

    assert(rollMocked(7) == 7)
  }

  it should s"throw exception when $rouletteNumberSupplierName provides incorrect values" in {
    assertThrows[IllegalStateException]{
      rollMocked(-2)
    }

    assertThrows[IllegalStateException]{
      rollMocked(37)
    }

    assertThrows[IllegalStateException]{
      rollMocked(4354)
    }

    assertThrows[IllegalStateException]{
      rollMocked(-4354)
    }
  }




}
